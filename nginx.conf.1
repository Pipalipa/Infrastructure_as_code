user nginx;
worker_processes auto;
pid /run/nginx.pid;

error_log /var/log/nginx/error.log warn;
events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types {
        text/html html;
        text/css css;
        text/xml xml;
        image/jpeg jpeg;
        image/png png;
        application/json json;
        application/javascript js;
        application/x-icon ico;
    }

    # HTTP server block
    server {
        listen 80;
        server_name 52.55.60.90;  

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server block
    server {
        listen 443 ssl;
        server_name 52.55.60.90;  

        ssl_certificate /certs/server.crt;
        ssl_certificate_key /certs/server.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!MD5:!RC4';
	ssl_prefer_server_ciphers on;

        # Proxy configuration
        location / {
            proxy_pass http://web:5000;  # Forward requests to the Flask app
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Serve static files
        location /static/ {
            alias /usr/share/nginx/html/static/;
        }
    }
}
